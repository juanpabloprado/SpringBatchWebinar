version = '1.0'

repositories {
    mavenCentral()
}

allprojects {
    group = 'org.springframework.batch'

    repositories {
        maven { url 'http://repo.spring.io/libs-milestone' }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url "https://repo.spring.io/libs-snapshot" }

        mavenCentral()
    }

    ext {
        springBatchVersion = '3.0.0.RELEASE'
        springVersion = '4.0.5.RELEASE'

        commonsDdbcpVersion = '1.4'
        hsqldbVersion = '2.3.2'
        javaxInjectApiVersion = '1'
        javaxBatchApiVersion = '1.0'
        junitVersion = '4.11'
    }
}

subprojects {
    apply plugin: 'java'

    compileJava {
        sourceCompatibility=1.7
        targetCompatibility=1.7
        options.encoding='UTF-8'
    }

    compileTestJava {
        sourceCompatibility=1.7
        targetCompatibility=1.7
        options.encoding='UTF-8'
    }
}

project('JSR-352') {

    dependencies {
        compile "org.springframework.batch:spring-batch-core:$springBatchVersion"
        compile "org.springframework:spring-jdbc:$springVersion"
        compile "javax.batch:javax.batch-api:$javaxBatchApiVersion"
        compile "javax.inject:javax.inject:$javaxInjectApiVersion"
        compile "commons-dbcp:commons-dbcp:$commonsDdbcpVersion"
        compile "org.hsqldb:hsqldb:$hsqldbVersion"

        testCompile "junit:junit:$junitVersion"
    }

    jar {
        manifest {
            attributes("Manifest-Version": '1.0',
                    "Created-By": "${System.getProperty('java.version')} (${System.getProperty('java.specification.vendor')})",
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.version,
                    "Main-Class": 'io.spring.batch.Main',
                    "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
            )
        }
    }

    task copyLibs(type: Copy) {
        from configurations.runtime
        into buildDir.absolutePath + '/libs'
    }

    tasks['build'].dependsOn(['copyLibs']);
}
